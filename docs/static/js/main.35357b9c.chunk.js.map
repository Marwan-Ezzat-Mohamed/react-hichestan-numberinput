{"version":3,"sources":["lib/NumberInput.js","Example.js","index.js"],"names":["NUMBER_FORMAT_FARSI","NUMBER_FORMAT_LATIN","lib_NumberInput","NumberInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","readValuesFromProps","value","valueToShow","mapValue","numberFormat","selectionStart","undefined","selectionEnd","handleKeyDown","event","keyCode","preventDefault","updateState","deleteValue","target","updateValue","toString","key","ctrlKey","metaKey","handlePaste","enteredValue","stripAnyThingButDigits","clipboardData","window","getData","handleInput","values","recheckValue","mapToFarsi","mapToLatin","newState","inputRef","current","document","activeElement","console","log","setSelectionRange","fireOnChange","element","enteredValueMapped","substring","length","qty","onChange","name","React","createRef","nextProps","nextState","_this$props","rest","onInput","onPast","onKeyDown","pattern","inputMode","type","ref","objectWithoutProperties","react_default","a","createElement","assign","defaultValue","onPaste","Component","str","replace","e","String","fromCharCode","charCodeAt","Example","state","Number1","Number2","handleChange","t","setState","handleValueChange","substr","Fragment","style","width","placeholder","render","dir","margin","src_Example","getElementById"],"mappings":"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","file":"static/js/main.35357b9c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport const NUMBER_FORMAT_FARSI = 'FARSI';\nexport const NUMBER_FORMAT_LATIN = 'LATIN';\n\nclass NumberInput extends Component {\n\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    // this.rr = React.createRef();\n\n    this.values = this.readValuesFromProps(props);\n  }\n\n  readValuesFromProps = (props) => {\n    const value = props.value || '';\n    const valueToShow = this.mapValue(value, props.numberFormat);\n\n    return {\n      value,\n      valueToShow,\n      selectionStart: undefined,\n      selectionEnd: undefined,\n    };\n  };\n\n  handleKeyDown = (event) => {\n    // console.log('keyCode: ', event.keyCode, 'key: ', event.key);\n    if(event.keyCode===8) { //backspace\n      event.preventDefault();\n      this.updateState(this.deleteValue(event.target, -1));\n    }else if(event.keyCode===46){ //delete\n      event.preventDefault();\n      this.updateState(this.deleteValue(event.target, 1));\n    }else if(event.keyCode>=48 && event.keyCode<=57){ //digits\n      event.preventDefault();\n      // console.log('digit');\n      this.updateState(this.updateValue(event.target, (event.keyCode - 48).toString(), this.props.numberFormat));\n    }else if(event.key>='۰' && event.key<='۹'){ //digits\n      event.preventDefault();\n      // console.log('digit');\n      this.updateState(this.updateValue(event.target, event.key, this.props.numberFormat));\n    }else if(event.keyCode>=36 && event.keyCode<=40){ //arrows\n    }else if(event.keyCode===9){ //tab\n    }else if((event.ctrlKey || event.metaKey) && (event.keyCode===67 || event.keyCode===86)){ //copy/paste\n    }else if(event.keyCode===229){ //android bug workaround\n    }else{\n      // console.log('other');\n      // console.log('keyCode: ', event.keyCode, 'key: ', event.key, 'ctrlKey: ', event.ctrlKey);\n      // this.rr.current.innerText = `keyCode: ${event.keyCode} key:  ${event.key} ctrlKey: ${event.ctrlKey}`;\n      event.preventDefault();\n    }\n  };\n\n  handlePaste = (event) => {\n    event.preventDefault();\n\n    const enteredValue = stripAnyThingButDigits((event.clipboardData || window.clipboardData).getData('text'));\n\n    this.updateState(this.updateValue(event.target, enteredValue, this.props.numberFormat));\n  };\n\n  handleInput = (event) => {\n    if(this.values.valueToShow===event.target.value) return;\n\n    const enteredValue = stripAnyThingButDigits(event.target.value);\n\n    this.updateState(this.recheckValue(event.target, enteredValue, this.props.numberFormat));\n  };\n\n  mapValue = (value, numberFormat) => {\n    if(numberFormat===NUMBER_FORMAT_FARSI){\n      return mapToFarsi(value);\n    }else if(numberFormat===NUMBER_FORMAT_LATIN){\n      return mapToLatin(value);\n    }\n    return mapToFarsi(value);\n  };\n\n\n  updateState = (newState) => {\n    if(!newState) return;\n\n    this.values = newState;\n    this.inputRef.current.value = this.values.valueToShow;\n    if(this.inputRef.current===document.activeElement){\n      console.log('has focus :D');\n      this.inputRef.current.setSelectionRange(this.values.selectionStart, this.values.selectionEnd);\n    }else{\n      console.log('has not focus :(');\n    }\n    this.fireOnChange();\n  };\n\n  updateValue = (element, enteredValue, numberFormat) => {\n    const enteredValueMapped = this.mapValue(enteredValue, numberFormat);\n    let valueToShow = element.value;\n    let selectionStart = element.selectionStart;\n    let selectionEnd = element.selectionEnd;\n\n    valueToShow = valueToShow.substring(0, selectionStart) + enteredValueMapped + valueToShow.substring(selectionEnd);\n\n    selectionStart += enteredValueMapped.length;\n    selectionEnd = selectionStart;\n\n    const value = mapToLatin(valueToShow);\n\n    return {\n      value,\n      valueToShow,\n      selectionStart,\n      selectionEnd,\n    };\n  };\n\n  recheckValue = (element, enteredValue, numberFormat) => {\n    let valueToShow = this.mapValue(enteredValue, numberFormat);\n    let selectionStart = element.selectionStart;\n    let selectionEnd = element.selectionEnd;\n\n    const value = mapToLatin(valueToShow);\n\n    return {\n      value,\n      valueToShow,\n      selectionStart,\n      selectionEnd,\n    };\n  };\n\n  deleteValue = (element, qty) => {\n    let valueToShow = element.value;\n    let selectionStart = element.selectionStart;\n    let selectionEnd = element.selectionEnd;\n\n    // console.log({selectionStart, selectionEnd})\n\n    if(selectionStart===selectionEnd){\n      if(qty < 0) {\n        if(selectionStart===0) return;\n        valueToShow = valueToShow.substring(0, selectionStart + qty) + valueToShow.substring(selectionEnd);\n        selectionStart += qty;\n      }else{\n        if(selectionEnd===valueToShow.length) return;\n        valueToShow = valueToShow.substring(0, selectionStart) + valueToShow.substring(selectionEnd+qty);\n      }\n    }else{\n      valueToShow = valueToShow.substring(0, selectionStart) + valueToShow.substring(selectionEnd);\n    }\n\n    selectionEnd = selectionStart;\n\n    const value = mapToLatin(valueToShow);\n\n    return {\n      value,\n      valueToShow,\n      selectionStart,\n      selectionEnd,\n    };\n  };\n\n  fireOnChange = () => {\n    if(this.props.onChange){\n      this.props.onChange({target: {name: this.props.name, value: this.values.value}});\n    }\n  };\n\n  shouldComponentUpdate(nextProps, nextState){\n    if(nextProps.value !== this.values.value || nextProps.numberFormat !== this.props.numberFormat){\n      this.updateState(this.readValuesFromProps(nextProps));\n    }\n    return false;\n  }\n\n  render() {\n\n    // console.log('rendered')\n\n    const {value, onChange, onInput, onPast, onKeyDown, pattern, inputMode, type, ref, numberFormat, ...rest} = this.props;\n    const {valueToShow} = this.values;\n\n    return (\n      <input\n        ref={this.inputRef}\n        type={\"text\"}\n        inputMode={\"numeric\"}\n        pattern={\"[0-9]*\"}\n        defaultValue={valueToShow}\n        onKeyDown={this.handleKeyDown}\n        onPaste={this.handlePaste}\n        onInput={this.handleInput}\n        {...rest}\n      />\n      );\n    //<p ref={this.rr} type={\"text\"}>empty</p></div>\n\n  }\n}\nexport default NumberInput;\n\n\nexport function mapToFarsi(str) {\n  if(!str) return str;\n  return str.toString().replace(/[1234567890]/gi, e => String.fromCharCode(e.charCodeAt(0) + 1728))\n}\n\nexport function mapToLatin(str) {\n  if(!str) return str;\n  return str.toString().replace(/[۱۲۳۴۵۶۷۸۹۰]/gi, e => String.fromCharCode(e.charCodeAt(0) - 1728))\n}\n\nexport function stripAnyThingButDigits(str) {\n  if(!str) return str;\n  return str.toString().replace(/[^1234567890۱۲۳۴۵۶۷۸۹۰]/gi, '');\n}\n","import React, { Component } from 'react';\nimport { NumberInput } from \"./lib\";\nimport {NUMBER_FORMAT_LATIN} from './lib/NumberInput';\n\nclass Example extends Component {\n  state = {\n    Number1: '',\n    Number2: '123',\n  };\n\n  handleChange = (event) => {\n    const newState = {};\n    const t = event.target;\n\n    newState[t.name] = t.value;\n    this.setState(newState, ()=>{\n      console.log('after', this.state)\n    });\n  };\n\n  handleValueChange = (event) => {\n    const newState = {};\n    const t = event.target;\n\n    newState[t.name.substr(0, 7)] = t.value;\n    this.setState(newState, ()=>{\n      console.log('after', this.state)\n    });\n  };\n\n  render(){\n    return (\n      <React.Fragment>\n        <div>\n          <br/>ورژن ۱ ساخت ۲\n          <br/>\n          <br/>\n          <label>خروجی عدد لاتین\n            <br/>\n            <input type=\"text\" name=\"Number1_value\" style={{width: 250}} value={this.state.Number1} onChange={this.handleValueChange}  placeholder=\"از اینجا کلید تب را چند بار بزنید\" />\n          </label>\n          <br/>\n          <br/>\n          <label>\n            نمونه فارسی\n            <br/>\n            <NumberInput name=\"Number1\" value={this.state.Number1} onChange={this.handleChange} placeholder=\"type/paste a number\" />\n          </label>\n        </div>\n        <br/>\n        <div>\n          <label>\n            نمونه لاتین\n            <br/>\n            <NumberInput name=\"Number2\" value={this.state.Number2} numberFormat={NUMBER_FORMAT_LATIN} onChange={this.handleChange} placeholder=\"type/paste a number\" />\n          </label>\n        </div>\n        <br/>\n        <br/>\n        <label>خروجی\n          <br/>\n          <input type=\"text\" name=\"Number2_value\" style={{width: 250}} value={this.state.Number2} onChange={this.handleValueChange} placeholder=\"این فیلد خروجی است\" />\n        </label>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Example;\n","import React from 'react';\nimport { render } from \"react-dom\";\nimport Example from './Example';\n\nconst App = () => (\n  <div dir={\"rtl\"} style={{ width: 640, margin: \"15px auto\" }}>\n    <h1>کمپننت عدد</h1>\n    <ul>\n      <li>نمایش عدد فارسی یا لاتین</li>\n      <li>ذخیره عدد لاتین، باعث میشود که داده صحیح به سرور داده شود</li>\n      <li>نمایش غیر عدد در صورتی که داده از بیرون به آن وارد شود.</li>\n      <li>نمایش کیبورد عددی در مبایل (غیر از مرورگر سامسونگ) </li>\n    </ul>\n\n    <Example/>\n\n  </div>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}